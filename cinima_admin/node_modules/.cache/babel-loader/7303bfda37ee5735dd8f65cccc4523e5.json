{"remainingRequest":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/babel-loader/lib/index.js!/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujianyang/IdeaProjects/cinima_admin/src/permission.js","dependencies":[{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/src/permission.js","mtime":1621349568783},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2d1amlhbnlhbmcvSWRlYVByb2plY3RzL2NpbmltYV9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvZ3VqaWFueWFuZy9JZGVhUHJvamVjdHMvY2luaW1hX2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCgppbXBvcnQgJ25wcm9ncmVzcy9ucHJvZ3Jlc3MuY3NzJzsgLy8gcHJvZ3Jlc3MgYmFyIHN0eWxlCgppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGdldCB0b2tlbiBmcm9tIGNvb2tpZQoKaW1wb3J0IGdldFBhZ2VUaXRsZSBmcm9tICdAL3V0aWxzL2dldC1wYWdlLXRpdGxlJzsKaW1wb3J0IHsgZ2V0QXN5bmNSb3V0ZXMgfSBmcm9tICdAL3JvdXRlci9keW5hbWljL2R5bmFtaWMtcm91dGUnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWycvbG9naW4nLCAnL2F1dGgtcmVkaXJlY3QnXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIGhhc1Rva2VuLCBoYXNSb2xlcywgcGVybWlzc2lvbnMsIGFjY2Vzc1JvdXRlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyCiAgICAgICAgICAgIE5Qcm9ncmVzcy5zdGFydCgpOyAvLyBzZXQgcGFnZSB0aXRsZQoKICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBnZXRQYWdlVGl0bGUodG8ubWV0YS50aXRsZSk7IC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBsb2dnZWQgaW4KCiAgICAgICAgICAgIGhhc1Rva2VuID0gZ2V0VG9rZW4oKTsKCiAgICAgICAgICAgIGlmICghaGFzVG9rZW4pIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghKHRvLnBhdGggPT09ICcvbG9naW4nKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBpZiBpcyBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIHRoZSBob21lIHBhZ2UKICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgcGF0aDogJy8nCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOyAvLyBoYWNrOiBodHRwczovL2dpdGh1Yi5jb20vUGFuSmlhQ2hlbi92dWUtZWxlbWVudC1hZG1pbi9wdWxsLzI5MzkKCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgb2J0YWluZWQgaGlzIHBlcm1pc3Npb24gcm9sZXMgdGhyb3VnaCBnZXRJbmZvCiAgICAgICAgICAgIGhhc1JvbGVzID0gc3RvcmUuZ2V0dGVycy5yb2xlcyAmJiBzdG9yZS5nZXR0ZXJzLnJvbGVzLmxlbmd0aCA+IDA7CgogICAgICAgICAgICBpZiAoIWhhc1JvbGVzKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9nZXRJbmZvJyk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICByZXR1cm4gZ2V0QXN5bmNSb3V0ZXMoKTsKCiAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICBwZXJtaXNzaW9ucyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMjsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCdwZXJtaXNzaW9uL2dlbmVyYXRlUm91dGVzJywgcGVybWlzc2lvbnMpOwoKICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgIGFjY2Vzc1JvdXRlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIC8vIGR5bmFtaWNhbGx5IGFkZCBhY2Nlc3NpYmxlIHJvdXRlcwogICAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcyk7IC8vIGhhY2sgbWV0aG9kIHRvIGVuc3VyZSB0aGF0IGFkZFJvdXRlcyBpcyBjb21wbGV0ZQogICAgICAgICAgICAvLyBzZXQgdGhlIHJlcGxhY2U6IHRydWUsIHNvIHRoZSBuYXZpZ2F0aW9uIHdpbGwgbm90IGxlYXZlIGEgaGlzdG9yeSByZWNvcmQKCiAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAyNzoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI3OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDE0KTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDMxOwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpOwoKICAgICAgICAgIGNhc2UgMzE6CiAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IoX2NvbnRleHQudDAgfHwgJ0hhcyBFcnJvcicpOwogICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwoKICAgICAgICAgIGNhc2UgMzQ6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAzNjoKICAgICAgICAgICAgLyogaGFzIG5vIHRva2VuKi8KICAgICAgICAgICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogICAgICAgICAgICAgIC8vIGluIHRoZSBmcmVlIGxvZ2luIHdoaXRlbGlzdCwgZ28gZGlyZWN0bHkKICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gb3RoZXIgcGFnZXMgdGhhdCBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGFjY2VzcyBhcmUgcmVkaXJlY3RlZCB0byB0aGUgbG9naW4gcGFnZS4KICAgICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICBjYXNlIDM3OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMTQsIDI3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgLy8gZmluaXNoIHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"sources":["/Users/gujianyang/IdeaProjects/cinima_admin/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","getAsyncRoutes","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasRoles","getters","roles","length","dispatch","permissions","accessRoutes","addRoutes","replace","error","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,cAAT,QAA+B,gCAA/B;AAEAH,SAAS,CAACI,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,gBAAX,CAAlB,C,CAA+C;;AAE/CT,MAAM,CAACU,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAV,YAAAA,SAAS,CAACW,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBX,YAAY,CAACM,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQCd,QAAQ,EART;;AAAA,iBAUZc,QAVY;AAAA;AAAA;AAAA;;AAAA,kBAWVP,EAAE,CAACQ,IAAH,KAAY,QAXF;AAAA;AAAA;AAAA;;AAYZ;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACAhB,YAAAA,SAAS,CAACiB,IAAV,GAdY,CAcK;;AAdL;AAAA;;AAAA;AAgBZ;AACMC,YAAAA,QAjBM,GAiBKpB,KAAK,CAACqB,OAAN,CAAcC,KAAd,IAAuBtB,KAAK,CAACqB,OAAN,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,CAjBzD;;AAAA,iBAkBRH,QAlBQ;AAAA;AAAA;AAAA;;AAmBVR,YAAAA,IAAI;AAnBM;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAwBFZ,KAAK,CAACwB,QAAN,CAAe,cAAf,CAxBE;;AAAA;AAAA;AAAA,mBA0BkBnB,cAAc,EA1BhC;;AAAA;AA0BFoB,YAAAA,WA1BE;AAAA;AAAA,mBA2BmBzB,KAAK,CAACwB,QAAN,CAAe,2BAAf,EAA4CC,WAA5C,CA3BnB;;AAAA;AA2BFC,YAAAA,YA3BE;AA4BR;AACA3B,YAAAA,MAAM,CAAC4B,SAAP,CAAiBD,YAAjB,EA7BQ,CA+BR;AACA;;AACAd,YAAAA,IAAI,iCAAMF,EAAN;AAAUkB,cAAAA,OAAO,EAAE;AAAnB,eAAJ;AAjCQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAoCF5B,KAAK,CAACwB,QAAN,CAAe,iBAAf,CApCE;;AAAA;AAqCRvB,YAAAA,OAAO,CAAC4B,KAAR,CAAc,eAAS,WAAvB;AACAjB,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAhB,YAAAA,SAAS,CAACiB,IAAV;;AAvCQ;AAAA;AAAA;;AAAA;AA4Cd;AAEA,gBAAIX,SAAS,CAACsB,OAAV,CAAkBpB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,cAAAA,IAAI;AACL,aAHD,MAGO;AACL;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAhB,cAAAA,SAAS,CAACiB,IAAV;AACD;;AArDa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAyDApB,MAAM,CAACgC,SAAP,CAAiB,YAAM;AACrB;AACA7B,EAAAA,SAAS,CAACiB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\nimport { getAsyncRoutes } from '@/router/dynamic/dynamic-route'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login', '/auth-redirect'] // no redirect whitelist\n\nrouter.beforeEach(async(to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done() // hack: https://github.com/PanJiaChen/vue-element-admin/pull/2939\n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      const hasRoles = store.getters.roles && store.getters.roles.length > 0\n      if (hasRoles) {\n        next()\n      } else {\n        try {\n          // get user info\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n          await store.dispatch('user/getInfo')\n          // 获取用户菜单\n          const permissions = await getAsyncRoutes()\n          const accessRoutes = await store.dispatch('permission/generateRoutes', permissions)\n          // dynamically add accessible routes\n          router.addRoutes(accessRoutes)\n\n          // hack method to ensure that addRoutes is complete\n          // set the replace: true, so the navigation will not leave a history record\n          next({ ...to, replace: true })\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('user/resetToken')\n          Message.error(error || 'Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}