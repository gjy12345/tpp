{"remainingRequest":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujianyang/IdeaProjects/cinima_admin/src/views/dashboard/admin/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/src/views/dashboard/admin/components/LineChart.vue","mtime":1622602531720},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnCnJlcXVpcmUoJ2VjaGFydHMvdGhlbWUvbWFjYXJvbnMnKSAvLyBlY2hhcnRzIHRoZW1lCmltcG9ydCByZXNpemUgZnJvbSAnLi9taXhpbnMvcmVzaXplJwppbXBvcnQgeyBkYXRlRm9ybWF0IH0gZnJvbSAnQC91dGlscy9kYXRlLWZvcm1hdCcKCmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFtyZXNpemVdLAogIHByb3BzOiB7CiAgICBjbGFzc05hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY2hhcnQnCiAgICB9LAogICAgd2lkdGg6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnMTAwJScKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnMzUwcHgnCiAgICB9LAogICAgYXV0b1Jlc2l6ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgY2hhcnREYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBsaW5lRGVzOiBTdHJpbmcKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydDogbnVsbAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNoYXJ0RGF0YTogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyKHZhbCkgewogICAgICAgIHRoaXMuc2V0T3B0aW9ucyh2YWwpCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIHRoaXMuaW5pdENoYXJ0KCkKICAgIH0pCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKCF0aGlzLmNoYXJ0KSB7CiAgICAgIHJldHVybgogICAgfQogICAgdGhpcy5jaGFydC5kaXNwb3NlKCkKICAgIHRoaXMuY2hhcnQgPSBudWxsCiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQoKSB7CiAgICAgIHRoaXMuY2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kZWwsICdtYWNhcm9ucycpCiAgICAgIHRoaXMuc2V0T3B0aW9ucyh0aGlzLmNoYXJ0RGF0YSkKICAgIH0sCiAgICBzZXRPcHRpb25zKHsgZXhwZWN0ZWREYXRhLCBhY3R1YWxEYXRhIH0gPSB7fSkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmdldFJlY2VudERheXMoKSkKICAgICAgdGhpcy5jaGFydC5zZXRPcHRpb24oewogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBkYXRhOiB0aGlzLmdldFJlY2VudERheXMoKSwKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZSwKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICBsZWZ0OiAxMCwKICAgICAgICAgIHJpZ2h0OiAxMCwKICAgICAgICAgIGJvdHRvbTogMjAsCiAgICAgICAgICB0b3A6IDMwLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsCiAgICAgICAgICBheGlzUG9pbnRlcjogewogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnCiAgICAgICAgICB9LAogICAgICAgICAgcGFkZGluZzogWzUsIDEwXQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGRhdGE6IFsnYWN0dWFsJ10KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICdleHBlY3RlZCcsIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBjb2xvcjogJyNGRjAwNUEnLAogICAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgICAgY29sb3I6ICcjRkYwMDVBJywKICAgICAgICAgICAgICAgIHdpZHRoOiAyCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgc21vb3RoOiB0cnVlLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgZGF0YTogZXhwZWN0ZWREYXRhLAogICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDI4MDAsCiAgICAgICAgICBhbmltYXRpb25FYXNpbmc6ICdjdWJpY0luT3V0JwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogJ2FjdHVhbCcsCiAgICAgICAgICBzbW9vdGg6IHRydWUsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjMzg4OGZhJywKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAnIzM4ODhmYScsCiAgICAgICAgICAgICAgICB3aWR0aDogMgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgYXJlYVN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJyNmM2Y4ZmYnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogYWN0dWFsRGF0YSwKICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAyODAwLAogICAgICAgICAgYW5pbWF0aW9uRWFzaW5nOiAncXVhZHJhdGljT3V0JwogICAgICAgIH1dCiAgICAgIH0pCiAgICB9LAogICAgZ2V0UmVjZW50RGF5cygpIHsKICAgICAgY29uc3QgYXJyID0gW10KICAgICAgY29uc3QgZGF5ID0gbmV3IERhdGUoKQogICAgICBkYXkuc2V0RGF0ZShkYXkuZ2V0RGF0ZSgpIC0gNykKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA3OyBpKyspIHsKICAgICAgICBkYXkuc2V0RGF0ZShkYXkuZ2V0RGF0ZSgpICsgMSkKICAgICAgICBhcnIucHVzaChkYXRlRm9ybWF0KCdtbS1kZCcsIGRheSkpCiAgICAgIH0KICAgICAgcmV0dXJuIGFycgogICAgfQogIH0KfQo="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/views/dashboard/admin/components","sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\" />\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nimport resize from './mixins/resize'\nimport { dateFormat } from '@/utils/date-format'\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    },\n    lineDes: String\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler(val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n      this.setOptions(this.chartData)\n    },\n    setOptions({ expectedData, actualData } = {}) {\n      console.log(this.getRecentDays())\n      this.chart.setOption({\n        xAxis: {\n          data: this.getRecentDays(),\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\n        legend: {\n          data: ['actual']\n        },\n        series: [{\n          name: 'expected', itemStyle: {\n            normal: {\n              color: '#FF005A',\n              lineStyle: {\n                color: '#FF005A',\n                width: 2\n              }\n            }\n          },\n          smooth: true,\n          type: 'line',\n          data: expectedData,\n          animationDuration: 2800,\n          animationEasing: 'cubicInOut'\n        },\n        {\n          name: 'actual',\n          smooth: true,\n          type: 'line',\n          itemStyle: {\n            normal: {\n              color: '#3888fa',\n              lineStyle: {\n                color: '#3888fa',\n                width: 2\n              },\n              areaStyle: {\n                color: '#f3f8ff'\n              }\n            }\n          },\n          data: actualData,\n          animationDuration: 2800,\n          animationEasing: 'quadraticOut'\n        }]\n      })\n    },\n    getRecentDays() {\n      const arr = []\n      const day = new Date()\n      day.setDate(day.getDate() - 7)\n      for (let i = 0; i < 7; i++) {\n        day.setDate(day.getDate() + 1)\n        arr.push(dateFormat('mm-dd', day))\n      }\n      return arr\n    }\n  }\n}\n</script>\n"]}]}