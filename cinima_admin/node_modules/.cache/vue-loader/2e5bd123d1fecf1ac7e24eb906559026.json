{"remainingRequest":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujianyang/IdeaProjects/cinima_admin/src/views/doc/film/film-doc.vue?vue&type=style&index=0&id=45d3b4d9&scoped=true&lang=css&","dependencies":[{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/src/views/doc/film/film-doc.vue","mtime":1623053426156},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7CiAgYm9yZGVyOiAxcHggZGFzaGVkIGJsYWNrOwogIGJvcmRlci1yYWRpdXM6IDZweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsKICBib3JkZXItY29sb3I6ICM0MDlFRkY7Cn0KLmF2YXRhci11cGxvYWRlci1pY29uIHsKICBmb250LXNpemU6IDI4cHg7CiAgY29sb3I6ICM4YzkzOWQ7CiAgd2lkdGg6IDE3OHB4OwogIGhlaWdodDogMTc4cHg7CiAgbGluZS1oZWlnaHQ6IDE3OHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouYXZhdGFyIHsKICB3aWR0aDogMTc4cHg7CiAgZGlzcGxheTogYmxvY2s7Cn0KLmF1dG9IaWRkZW57CiAgZGlzcGxheTogLXdlYmtpdC1ib3g7CiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDsKICAtd2Via2l0LWxpbmUtY2xhbXA6IDg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKfQo="},{"version":3,"sources":["film-doc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"film-doc.vue","sourceRoot":"src/views/doc/film","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-button class=\"filter-item\" type=\"primary\" style=\"margin-right: 10px\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加\n      </el-button>\n      <el-input v-model=\"listQuery.name\" placeholder=\"电影名\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"getList\" />\n      <el-date-picker\n        v-model=\"listQuery.begin\"\n        type=\"datetime\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n        style=\"width: 200px;margin-left: 10px\"\n        class=\"filter-item\"\n        placeholder=\"上映日期起始时间\"\n      />\n      <el-date-picker\n        v-model=\"listQuery.end\"\n        type=\"datetime\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n        style=\"width: 200px;margin-left: 10px\"\n        class=\"filter-item\"\n        placeholder=\"上映日期结尾时间\"\n      />\n      <el-select v-model=\"listQuery.status\" placeholder=\"是否上线\" clearable class=\"filter-item\" style=\"width: 130px;margin-left: 10px\">\n        <el-option label=\"\" value=\"\" />\n        <el-option label=\"上线\" value=\"1\" />\n        <el-option label=\"下线\" value=\"0\" />\n      </el-select>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-search\" @click=\"getList\">\n        搜索\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-refresh-left\" @click=\"resetQueryParams\">\n        重置\n      </el-button>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"序号\" align=\"center\" width=\"80\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"电影名\" min-width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <img\n            v-if=\"row.cover\"\n            :src=\"row.cover|concatUrl\"\n            style=\"width: 80%;display: block;margin: 0 auto\"\n          >\n          <span>{{ row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"导演\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.director }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"国家/地区\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.region }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"时长\" width=\"80px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.duration }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"主演\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.star }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"语言\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.lang }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"权重\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.weight }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"评分\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.score }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"类型\" width=\"120px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag\n            v-for=\"tag in (row.filmTypes==null?[]:row.filmTypes)\"\n            :key=\"tag.id\"\n            style=\"margin-top: 4px\"\n          >\n            {{ tag.name }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"上映时间\" width=\"120px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.showTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"简介\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-popover\n            placement=\"top-start\"\n            title=\"简介\"\n            width=\"300\"\n            trigger=\"hover\"\n            :content=\"row.describe\"\n          >\n            <span slot=\"reference\" class=\"autoHidden\">{{ row.describe }}</span>\n          </el-popover>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建人\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.createUser }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"更新时间\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.updateTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"是否上线\" class-name=\"status-col\" width=\"80\">\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.status | statusFilter\">\n            {{ row.status===1?'上线':'下线' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"'操作'\" align=\"center\" class-name=\"small-padding fixed-width\" fixed=\"right\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button type=\"primary\" size=\"mini\" style=\"margin-top: 10px;margin-left: 5px\" @click=\"handleUpdate(row)\">\n            编辑\n          </el-button>\n          <!--          <el-button size=\"mini\" type=\"info\" style=\"margin-top: 10px\" @click=\"handleDelete(row,$index)\">-->\n          <!--            排片-->\n          <!--          </el-button>-->\n          <el-button size=\"mini\" type=\"danger\" style=\"margin-top: 10px\" @click=\"handleDelete(row,$index)\">\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.pageSize\" @pagination=\"getList\" />\n    <!--  新增  修改-->\n    <el-dialog :title=\"dialogType==='create'?'新增':'修改'\" :visible.sync=\"dialogVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"right\" label-width=\"85px\" style=\"width: 80%; margin-left:10%;\">\n        <el-form-item label=\"电影名\" prop=\"name\">\n          <el-input v-model=\"temp.name\" />\n        </el-form-item>\n        <el-form-item label=\"电影封面\">\n          <el-upload\n            class=\"avatar-uploader\"\n            :action=\"uploadResourceUrl\"\n            :headers=\"uploadHeader\"\n            :show-file-list=\"false\"\n            :on-success=\"handleCoverSuccess\"\n            :before-upload=\"beforeCoverUpload\"\n          >\n            <img v-if=\"temp.cover!=null\" :src=\"temp.cover|concatUrl\" class=\"avatar\">\n            <i v-else class=\"el-icon-plus avatar-uploader-icon el-upload\" />\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"导演\" prop=\"director\">\n          <el-input v-model=\"temp.director\" />\n        </el-form-item>\n        <el-form-item label=\"国家/地区\" prop=\"region\">\n          <el-input v-model=\"temp.region\" />\n        </el-form-item>\n        <el-form-item label=\"语言\" prop=\"lang\">\n          <el-input v-model=\"temp.lang\" />\n        </el-form-item>\n        <el-form-item label=\"评分\">\n          <el-input v-model=\"temp.score\" />\n        </el-form-item>\n        <el-form-item label=\"权重\" prop=\"weight\">\n          <el-input v-model=\"temp.weight\" />\n        </el-form-item>\n        <el-form-item label=\"时长\" prop=\"duration\">\n          <el-input v-model=\"temp.duration\" />\n        </el-form-item>\n        <el-form-item label=\"主演\" prop=\"star\">\n          <el-input v-model=\"temp.star\" type=\"textarea\" autosize />\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"type\">\n          <el-select v-model=\"temp.type\" multiple placeholder=\"请选择\" style=\"width: 100%\">\n            <el-option\n              v-for=\"item in allFilmTypes\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"上映时间\" prop=\"showTime\">\n          <el-date-picker\n            v-model=\"temp.showTime\"\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\n            type=\"datetime\"\n            placeholder=\"选择时间\"\n          />\n        </el-form-item>\n        <el-form-item label=\"简介\" prop=\"describe\">\n          <el-input v-model=\"temp.describe\" type=\"textarea\" autosize />\n        </el-form-item>\n        <el-form-item label=\"是否上线\" prop=\"status\">\n          <el-select v-model=\"temp.status\" class=\"filter-item\" placeholder=\"请选择\">\n            <el-option label=\"上线\" :value=\"1\" />\n            <el-option label=\"下线\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogType==='create'?createData():updateData()\">\n          确定\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Pagination from '@/components/Pagination'\nimport { getResourceUrl } from '@/api/static'\nimport { getAllSimpleTypes } from '@/api/doc-film-type'\nimport { createFilm, deleteFilm, getFilmList, updateFilm } from '@/api/doc-film'\nimport { getToken } from '@/utils/auth'\n// import Pagination from '@/components/Pagination' // secondary package based on el-pagination\nexport default {\n  name: 'FilmDoc',\n  components: { Pagination },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        1: 'success',\n        0: 'danger'\n      }\n      return statusMap[status]\n    },\n    concatUrl(u) {\n      return getResourceUrl(u)\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: false,\n      allFilmTypes: [],\n      uploadResourceUrl: process.env.VUE_APP_BASE_API + '/common/file/uploadImages',\n      uploadHeader: {\n        'Token': getToken()\n      },\n      listQuery: {\n        page: 1,\n        pageSize: 10,\n        begin: null,\n        end: null,\n        name: null,\n        status: null\n      },\n      dialogVisible: false,\n      dialogType: null,\n      temp: {\n        id: undefined,\n        type: [],\n        cover: null\n      },\n      rules: {\n        name: [{ required: true, message: '请填入类型名', trigger: 'change' }],\n        type: [{ required: true, message: '请选择类型', trigger: 'change', type: 'array' }],\n        star: [{ required: true, message: '请选择地址', trigger: 'change' }],\n        duration: [{ required: true, message: '请填写必填项', trigger: 'change' }],\n        region: [{ required: true, message: '请填写必填项', trigger: 'change' }],\n        director: [{ required: true, message: '请填写必填项', trigger: 'change' }],\n        showTime: [{ required: true, message: '请填写必填项', trigger: 'change' }],\n        describe: [{ required: true, message: '请填写必填项', trigger: 'change' }],\n        status: [{ required: true, message: '请填写必填项', trigger: 'change' }],\n        lang: [{ required: true, message: '请填写必填项', trigger: 'change' }]\n      }\n    }\n  },\n  created() {\n    this.getAllTypes()\n    this.getList()\n  },\n  methods: {\n    getAllTypes() {\n      getAllSimpleTypes().then(res => {\n        this.allFilmTypes = res.data\n      })\n    },\n    handleFilter() {\n    },\n    getList() {\n      this.listLoading = true\n      getFilmList(this.listQuery).then(res => {\n        this.list = res.data.list\n        this.total = res.data.total\n        this.listLoading = false\n      })\n    },\n    handleUpdate(row) {\n      this.temp = Object.assign({\n        type: []\n      }, row) // copy obj\n      this.temp.type = []\n      this.dialogType = 'update'\n      this.dialogVisible = true\n      if (this.temp.filmTypes != null) {\n        for (const index in this.temp.filmTypes) {\n          this.temp.type.push(this.temp.filmTypes[index].id)\n        }\n      }\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleDelete(row, index) {\n      this.$confirm('确认删除？')\n        .then(_ => {\n          deleteFilm(row.id).then(_ => {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.list.splice(index, 1)\n          })\n        })\n        .catch(_ => {})\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.tempSCity = null\n      this.tempSProvince = null\n      this.tempSCountry = null\n      this.dialogType = 'create'\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          createFilm(tempData).then(() => {\n            this.dialogVisible = false\n            this.$notify({\n              title: '成功',\n              message: '创建成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          })\n        }\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          updateFilm(tempData).then(() => {\n            const index = this.list.findIndex(v => v.id === this.temp.id)\n            this.temp.filmTypes = this.allFilmTypes.filter(value => {\n              return this.temp.type.find(v => {\n                return v === value.id\n              }) !== undefined\n            })\n            this.list.splice(index, 1, this.temp)\n            this.dialogVisible = false\n            this.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleCoverSuccess(res, file) {\n      if (res.code === 20000) {\n        this.temp.cover = res.data\n      } else {\n        this.$notify({\n          title: '失败',\n          message: res.msg | '上传失败',\n          type: 'success',\n          duration: 2000\n        })\n      }\n    },\n    beforeCoverUpload(file) {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif'\n      const isLt2M = file.size / 1024 / 1024 < 2\n      if (!isJPG) {\n        this.$message.error('上传封面图片只能是 JPG 格式!')\n      }\n      if (!isLt2M) {\n        this.$message.error('上传封面图片大小不能超过 2MB!')\n      }\n      return isJPG && isLt2M\n    },\n    resetQueryParams() {\n      this.listQuery = {\n        page: 1,\n        pageSize: 10,\n        name: '',\n        status: null\n      }\n      this.getList()\n    },\n    resetTemp() {\n      this.temp.type = []\n      this.temp = {\n        id: undefined,\n        cover: null\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.avatar-uploader .el-upload {\n  border: 1px dashed black;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  display: block;\n}\n.autoHidden{\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 8;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>\n"]}]}