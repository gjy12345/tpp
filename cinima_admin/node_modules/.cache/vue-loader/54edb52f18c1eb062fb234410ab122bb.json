{"remainingRequest":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujianyang/IdeaProjects/cinima_admin/src/views/dashboard/admin/index.vue?vue&type=style&index=0&id=a361ec26&lang=scss&scoped=true&","dependencies":[{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/src/views/dashboard/admin/index.vue","mtime":1622623412734},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhc2hib2FyZC1lZGl0b3ItY29udGFpbmVyIHsKICBwYWRkaW5nOiAzMnB4OwogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsIDI0MiwgMjQ1KTsKICBwb3NpdGlvbjogcmVsYXRpdmU7CgogIC5naXRodWItY29ybmVyIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHRvcDogMHB4OwogICAgYm9yZGVyOiAwOwogICAgcmlnaHQ6IDA7CiAgfQoKICAuY2hhcnQtd3JhcHBlciB7CiAgICBiYWNrZ3JvdW5kOiAjZmZmOwogICAgcGFkZGluZzogMTZweCAxNnB4IDA7CiAgICBtYXJnaW4tYm90dG9tOiAzMnB4OwogIH0KfQoKQG1lZGlhIChtYXgtd2lkdGg6MTAyNHB4KSB7CiAgLmNoYXJ0LXdyYXBwZXIgewogICAgcGFkZGluZzogOHB4OwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard/admin","sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n\n    <panel-group :day-in-come=\"dayIncome\" :day-new-comment=\"dayCommon\" :day-order=\"dayOrder\" :day-new-customer=\"dayCustomer\" @handleSetLineChartData=\"handleSetLineChartData\" />\n\n    <el-row style=\"background:#fff;padding:16px 16px 0;margin-bottom:32px;\">\n      <line-chart :chart-data=\"lineChartData\" :line-des=\"lineDes\" />\n    </el-row>\n\n    <el-row style=\"text-align: center;font-size: medium\">\n      <span class=\"el-breadcrumb__inner\">电影院选票系统v1.0 @copyright 2021</span>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport PanelGroup from './components/PanelGroup'\nimport LineChart from './components/LineChart'\nimport { getDashData } from '@/api/dashboard'\n\nconst lineChartData = {\n  dayNewCustomer: {\n    actualData: [1, 2, 2]\n  },\n  dayNewComment: {\n    actualData: []\n  },\n  dayInCome: {\n    actualData: []\n  },\n  dayOrder: {\n    actualData: []\n  }\n}\n\nconst lineType = {\n  dayNewCustomer: '新用户',\n  dayNewComment: '新评论',\n  dayInCome: '新增收入',\n  dayOrder: '新增订单'\n}\n\nexport default {\n  name: 'DashboardAdmin',\n  components: {\n    PanelGroup,\n    LineChart\n  },\n  data() {\n    return {\n      lineChartData: lineChartData.dayNewCustomer,\n      lineDes: lineType.dayNewCustomer,\n      dayCustomer: 0,\n      dayCommon: 0,\n      dayIncome: 0,\n      dayOrder: 0\n    }\n  },\n  created() {\n    this.loadData()\n  },\n  methods: {\n    handleSetLineChartData(type) {\n      this.lineChartData = lineChartData[type]\n      this.lineDes = lineType[type]\n      console.log((this.lineDes))\n    },\n    loadData() {\n      getDashData().then(res => {\n        const data = res.data\n        lineChartData.dayNewCustomer.actualData = data[0].graphData\n        this.dayCustomer = data[0].showCount\n        lineChartData.dayNewComment.actualData = data[1].graphData\n        this.dayCommon = data[1].showCount\n        lineChartData.dayInCome.actualData = data[2].graphData\n        this.dayIncome = data[2].showCount / 100\n        for (let i = 0; i < data[3].graphData.length; i++) {\n          data[3].graphData[i] = 1\n          console.log(data[3].graphData[i])\n        }\n        lineChartData.dayOrder.actualData = data[3].graphData\n        this.dayOrder = data[3].showCount\n        console.log(data)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 32px;\n  background-color: rgb(240, 242, 245);\n  position: relative;\n\n  .github-corner {\n    position: absolute;\n    top: 0px;\n    border: 0;\n    right: 0;\n  }\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n@media (max-width:1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n</style>\n"]}]}