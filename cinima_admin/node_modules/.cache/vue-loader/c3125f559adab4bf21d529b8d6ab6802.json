{"remainingRequest":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujianyang/IdeaProjects/cinima_admin/src/views/doc/hall/hall-doc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/src/views/doc/hall/hall-doc.vue","mtime":1621775716859},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujianyang/IdeaProjects/cinima_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJwppbXBvcnQgeyBnZXRIYWxsTGlzdCwgdXBkYXRlSGFsbCwgY3JlYXRlSGFsbCwgZGVsZXRlSGFsbCB9IGZyb20gJ0AvYXBpL2RvY19oYWxsJwovLyBpbXBvcnQgUGFnaW5hdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUGFnaW5hdGlvbicgLy8gc2Vjb25kYXJ5IHBhY2thZ2UgYmFzZWQgb24gZWwtcGFnaW5hdGlvbgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hhbGxEb2MnLAogIGNvbXBvbmVudHM6IHsgUGFnaW5hdGlvbiB9LAogIGZpbHRlcnM6IHsKICAgIHN0YXR1c0ZpbHRlcihzdGF0dXMpIHsKICAgICAgY29uc3Qgc3RhdHVzTWFwID0gewogICAgICAgIDE6ICdzdWNjZXNzJywKICAgICAgICAwOiAnZGFuZ2VyJwogICAgICB9CiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlS2V5OiAwLAogICAgICBsaXN0OiBudWxsLAogICAgICB0b3RhbDogMCwKICAgICAgbGlzdExvYWRpbmc6IGZhbHNlLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBjaW5lbWFJZDogbnVsbCwKICAgICAgICBwYWdlOiAxLAogICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICBzdGF0dXM6IG51bGwsCiAgICAgICAgbmFtZTogJycKICAgICAgfSwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGRpYWxvZ1R5cGU6IG51bGwsCiAgICAgIHRlbXA6IHsKICAgICAgICBpZDogdW5kZWZpbmVkLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHR5cGU6ICcnLAogICAgICAgIHN0YXR1czogJycsCiAgICAgICAgcG9zaXRpb246ICcnCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7floavlhaXlvbHpmaLlkI0nLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XSwKICAgICAgICBzdGF0dXM6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup54q25oCBJywgdHJpZ2dlcjogJ2NoYW5nZScgfV0sCiAgICAgICAgdHlwZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnsbvlnosnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9XQogICAgICB9LAogICAgICBub3dDaW5lbWE6IHt9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5ub3dDaW5lbWEgPSB0aGlzLiRyb3V0ZS5xdWVyeQogICAgdGhpcy5saXN0UXVlcnkuY2luZW1hSWQgPSB0aGlzLm5vd0NpbmVtYS5pZAogICAgdGhpcy5nZXRMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUZpbHRlcigpIHsKICAgIH0sCiAgICBnZXRMaXN0KCkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQogICAgICBnZXRIYWxsTGlzdCh0aGlzLmxpc3RRdWVyeSkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMubGlzdCA9IHJlcy5kYXRhLmxpc3QKICAgICAgICB0aGlzLnRvdGFsID0gcmVzLmRhdGEudG90YWwKICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVVcGRhdGUocm93KSB7CiAgICAgIHRoaXMudGVtcCA9IE9iamVjdC5hc3NpZ24oe30sIHJvdykgLy8gY29weSBvYmoKICAgICAgdGhpcy5kaWFsb2dUeXBlID0gJ3VwZGF0ZScKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS5jbGVhclZhbGlkYXRlKCkKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVEZWxldGUocm93LCBpbmRleCkgewogICAgICB0aGlzLiRjb25maXJtKCfnoa7orqTliKDpmaTvvJ8nKQogICAgICAgIC50aGVuKF8gPT4gewogICAgICAgICAgZGVsZXRlSGFsbChyb3cuaWQpLnRoZW4oXyA9PiB7CiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgdGl0bGU6ICfmiJDlip8nLAogICAgICAgICAgICAgIG1lc3NhZ2U6ICfliKDpmaTmiJDlip8nLAogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKGluZGV4LCAxKQogICAgICAgICAgfSkKICAgICAgICB9KQogICAgICAgIC5jYXRjaChfID0+IHt9KQogICAgfSwKICAgIGhhbmRsZUVkaXRTaXRlKHJvdykgewogICAgICBjb25zdCB0ZW1wRGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIHJvdykKICAgICAgdGVtcERhdGFbJ2NpbmVtYSddID0gdGhpcy5ub3dDaW5lbWEubmFtZSArIHRoaXMubm93Q2luZW1hLnBvc2l0aW9uICsgdGhpcy5ub3dDaW5lbWEuYWRkcmVzcwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICdTaXRlRG9jJywgcXVlcnk6IHRlbXBEYXRhIH0pCiAgICB9LAogICAgaGFuZGxlQ3JlYXRlKCkgewogICAgICB0aGlzLnJlc2V0VGVtcCgpCiAgICAgIHRoaXMuZGlhbG9nVHlwZSA9ICdjcmVhdGUnCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10uY2xlYXJWYWxpZGF0ZSgpCiAgICAgIH0pCiAgICB9LAogICAgY3JlYXRlRGF0YSgpIHsKICAgICAgY29uc29sZS5sb2coJ2NyZWF0ZURhdGEnKQogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHZhbGlkKQogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgY29uc3QgdGVtcERhdGEgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnRlbXApCiAgICAgICAgICBjcmVhdGVIYWxsKHRlbXBEYXRhKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+WIm+W7uuaIkOWKnycsCiAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICB1cGRhdGVEYXRhKCkgewogICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgY29uc3QgdGVtcERhdGEgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnRlbXApCiAgICAgICAgICB1cGRhdGVIYWxsKHRlbXBEYXRhKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmxpc3QuZmluZEluZGV4KHYgPT4gdi5pZCA9PT0gdGhpcy50ZW1wLmlkKQogICAgICAgICAgICB0aGlzLmxpc3Quc3BsaWNlKGluZGV4LCAxLCB0aGlzLnRlbXApCiAgICAgICAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgdGl0bGU6ICfmiJDlip8nLAogICAgICAgICAgICAgIG1lc3NhZ2U6ICfmm7TmlrDmiJDlip8nLAogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICB9KQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgcmVzZXRRdWVyeVBhcmFtcygpIHsKICAgICAgdGhpcy5saXN0UXVlcnkgPSB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICBwYWdlU2l6ZTogMTAsCiAgICAgICAgc3RhdHVzOiBudWxsLAogICAgICAgIG5hbWU6ICcnCiAgICAgIH0KICAgICAgdGhpcy5nZXRMaXN0KCkKICAgIH0sCiAgICByZXNldFRlbXAoKSB7CiAgICAgIHRoaXMudGVtcCA9IHsKICAgICAgICBpZDogdW5kZWZpbmVkLAogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHR5cGU6ICcnLAogICAgICAgIHN0YXR1czogJycsCiAgICAgICAgY2luZW1hSWQ6IHRoaXMubm93Q2luZW1hLmlkCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["hall-doc.vue"],"names":[],"mappingsfile":"hall-doc.vue","sourceRoot":"src/views/doc/hall","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\" style=\"margin: 0;padding: 0\">\n      <div class=\"el-form-item__content\" style=\"display: block;margin: 0;padding: 0\">\n        <span class=\" el-form-item__label\">当前选择影院:</span>\n        <span class=\" el-form-item__label\" style=\"color: deepskyblue\">\n          {{ nowCinema.name }} ({{ nowCinema.position+nowCinema.address }})\n        </span>\n      </div>\n      <el-button class=\"filter-item\" type=\"primary\" style=\"margin-right: 10px\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        添加\n      </el-button>\n\n      <el-input v-model=\"listQuery.name\" placeholder=\"影厅名\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"getList\" />\n      <el-select v-model=\"listQuery.status\" placeholder=\"是否启用\" clearable class=\"filter-item\" style=\"width: 130px;margin-left: 10px\">\n        <el-option label=\"\" value=\"\" />\n        <el-option label=\"启用\" value=\"1\" />\n        <el-option label=\"禁用\" value=\"0\" />\n      </el-select>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-search\" @click=\"getList\">\n        搜索\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-refresh-left\" @click=\"resetQueryParams\">\n        重置\n      </el-button>\n    </div>\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"序号\" align=\"center\" width=\"80\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"影厅名\" min-width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"座位\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.nonNull | statusFilter\">\n            {{ row.nonNull===0?'未排位':'已排位' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"影厅类型\" width=\"170px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.type }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建人\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.createUser }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.createTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"更新时间\" width=\"110px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.updateTime }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"'是否可用'\" class-name=\"status-col\" width=\"100\">\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.status | statusFilter\">\n            {{ row.status===1?'可用':'禁用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"'操作'\" align=\"center\" width=\"230\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            编辑\n          </el-button>\n          <el-button size=\"mini\" type=\"info\" @click=\"handleEditSite(row)\">\n            排位\n          </el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.pageSize\" @pagination=\"getList\" />\n    <!--  新增  修改-->\n    <el-dialog :title=\"dialogType==='create'?'新增':'修改'\" :visible.sync=\"dialogVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"right\" label-width=\"80px\" style=\"width: 80%; margin-left:10%;\">\n        <el-form-item label=\"影厅名\" prop=\"name\">\n          <el-input v-model=\"temp.name\" />\n        </el-form-item>\n        <el-form-item label=\"影厅类型\" prop=\"type\">\n          <el-input v-model=\"temp.type\" placeholder=\"IMAX,激光..等类型\" />\n        </el-form-item>\n        <el-form-item label=\"是否启用\" prop=\"status\">\n          <el-select v-model=\"temp.status\" class=\"filter-item\" placeholder=\"请选择\">\n            <el-option label=\"启用\" :value=\"1\" />\n            <el-option label=\"禁用\" :value=\"0\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">\n          取消\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogType==='create'?createData():updateData()\">\n          确定\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport Pagination from '@/components/Pagination'\nimport { getHallList, updateHall, createHall, deleteHall } from '@/api/doc_hall'\n// import Pagination from '@/components/Pagination' // secondary package based on el-pagination\nexport default {\n  name: 'HallDoc',\n  components: { Pagination },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        1: 'success',\n        0: 'danger'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        cinemaId: null,\n        page: 1,\n        pageSize: 10,\n        status: null,\n        name: ''\n      },\n      dialogVisible: false,\n      dialogType: null,\n      temp: {\n        id: undefined,\n        name: '',\n        type: '',\n        status: '',\n        position: ''\n      },\n      rules: {\n        name: [{ required: true, message: '请填入影院名', trigger: 'change' }],\n        status: [{ required: true, message: '请选择状态', trigger: 'change' }],\n        type: [{ required: true, message: '请输入类型', trigger: 'change' }]\n      },\n      nowCinema: {}\n    }\n  },\n  created() {\n    this.nowCinema = this.$route.query\n    this.listQuery.cinemaId = this.nowCinema.id\n    this.getList()\n  },\n  methods: {\n    handleFilter() {\n    },\n    getList() {\n      this.listLoading = true\n      getHallList(this.listQuery).then(res => {\n        this.list = res.data.list\n        this.total = res.data.total\n        this.listLoading = false\n      })\n    },\n    handleUpdate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogType = 'update'\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleDelete(row, index) {\n      this.$confirm('确认删除？')\n        .then(_ => {\n          deleteHall(row.id).then(_ => {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.list.splice(index, 1)\n          })\n        })\n        .catch(_ => {})\n    },\n    handleEditSite(row) {\n      const tempData = Object.assign({}, row)\n      tempData['cinema'] = this.nowCinema.name + this.nowCinema.position + this.nowCinema.address\n      this.$router.push({ name: 'SiteDoc', query: tempData })\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogType = 'create'\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      console.log('createData')\n      this.$refs['dataForm'].validate((valid) => {\n        console.log(valid)\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          createHall(tempData).then(() => {\n            this.dialogVisible = false\n            this.$notify({\n              title: '成功',\n              message: '创建成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          })\n        }\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          updateHall(tempData).then(() => {\n            const index = this.list.findIndex(v => v.id === this.temp.id)\n            this.list.splice(index, 1, this.temp)\n            this.dialogVisible = false\n            this.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    resetQueryParams() {\n      this.listQuery = {\n        page: 1,\n        pageSize: 10,\n        status: null,\n        name: ''\n      }\n      this.getList()\n    },\n    resetTemp() {\n      this.temp = {\n        id: undefined,\n        name: '',\n        type: '',\n        status: '',\n        cinemaId: this.nowCinema.id\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}